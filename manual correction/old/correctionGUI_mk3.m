

%exprNumber  = 22 ;
%movieNumber = 23 ;
%PC = getPC() ; % 1 for desktop, 2 for laptop
PC = 1 ;

outputPath = 'G:\Janelia Flies\kir2.1 flies round 2\Analysis\Roll Right\Expr_10_mov_085\' ;
outputFilename = 'Expr10mov085_Data_manually_corrected_onlyPhi.mat' ;
outputFilenameFull = fullfile(outputPath, outputFilename) ; % 'F:\DATA\Pitch\Analysis\Pitch_Down\expr7mov6\Expr7mov006_Data_manually_corrected.mat' ;

if (~isfield(data, 'rhoTimes'))
    data.rhoTimes = [] ;
end

%outputFilename = getDataFileName(exprNumber, movieNumber, PC) ;

%outputFilename = 'F:\Roll\MatlabCode\TRACKER\Expr28\expr28mov47_part2\mov47dataRaw_part2.mat' ;
%outputFilename = 'C:\Tsevi\Roll\MatlabCode\TRACKER\Expr22\expr22mov34\mov34data_Oct2011';
saveEvery = 2000000 ;
startFrame = 550 ; 

ignoreFrames = [] ;

saveFlag = true ;
loadFlag = false ;
allocateVariablesFlag = true ;

% load(outputFilename) ;
if (loadFlag)
    % load (hullAnalysisFilename) ;
    load (outputFilenameFull) ;
    %rollHats = data.improvedAHat ;
end

Nimages = data.params.endTrackingTime - data.params.startTrackingTime + 1 ; 

%{
Relevant vectors
----------------
chord1Hats - right wing chord vector
chord2Hats - left  wing chord vector
span1Hats  - right wing span  vector
span2Hats  - left  wing span  vector
rollHats   - main body axis

since rotatations are not commutative, we need to keep the values of these
vectors after the user's correction. We will then re-calculate the wings and
body angles from these vectors, the same way it was done in hullAnalysis.m
%}

chord1Hats = data.rightChordHats ;
chord2Hats = data.leftChordHats ;
span1Hats  = data.rightSpanHats ;
span2Hats  = data.leftSpanHats ;
rollHats   = data.AHat ;

Nimages     = data.Nimages ;
normRolls   = data.rollVectors ; % zeros(Nimages,3) ;

%psiHats     = zeros(Nimages,3) ;
chord2Hat2s = zeros(Nimages,3) ;
chord1Hat2s = zeros(Nimages,3) ;
phi2Hats    = zeros(Nimages,3) ;
%phi1Hats    = zeros(Nimages,3) ;


psiVec  = atan2(rollHats(:,2),rollHats(:,1)); % body angle with respect to x axis
psiHats  = [-sin(psiVec)  cos(psiVec)  zeros(Nimages,1)];

phi1Vec   = atan2(span1Hats(:,2),span1Hats(:,1));
phi1Hats = [-sin(phi1Vec) cos(phi1Vec) zeros(Nimages,1)];

phi2Vec   = atan2(span2Hats(:,2),span2Hats(:,1));
phi2Hats = [-sin(phi2Vec) cos(phi2Vec) zeros(Nimages,1)];

clear phi1Vec phi2Vec psiVec

if (allocateVariablesFlag)
    flags  = zeros(Nimages,19);
    flags(data.rhoTimes,7) = true ;
    
    adjust = zeros(Nimages,19);
    swap   = zeros(Nimages,1);
    flip1  = zeros(Nimages,1);
    flip2  = zeros(Nimages,1);
    pitchflipFlag = zeros(Nimages,1) ;
    %{
    chord1Hats_user = zeros(Nimages, 3) ;
    chord2Hats_user = zeros(Nimages, 3) ;
    span1Hats_user  = zeros(Nimages, 3) ;
    span2Hats_user  = zeros(Nimages, 3) ;
    rollHats_user   = zeros(Nimages, 3) ;
    %}
end


df = diff(data.res(:,1)) ;
frameStartInd = [1 ; find(df==1)+1] ;
frameEndInd   = [frameStartInd(2:end)-1 ; size(data.res,1)] ;
% next three lines account for the case where tracking starts in the middle
% of the movie. it padds the starttime and entime vectors with zeros. A
% more efficient way would be to subtract noffset in every access to these
% vectors.
noffset       = data.params.startTrackingTime - data.params.firstTrackableFrame  ;
%frameStartInd = [zeros(noffset,1) ; frameStartInd ] ;
%frameEndInd   = [zeros(noffset,1) ; frameEndInd ] ;

clear df;

rightWingColor = [1 0 0 ] ; % [ 255 177 100 ] / 255 ; % orange
leftWingColor  = [0 0 1 ] ; % [ 0    1    1 ]       ; % cyan
bodyColor      = [0 1 0 ] ; % [ 51  204   0 ] / 255 ; % dark green
unrelatedColor = [0.6 0.6 0.6] ; % gray

s1Color = 'k' ;
c1Color = 'b' ;

s2Color = 'k' ;
c2Color = 'r' ;

switch (PC)
    case {1,3}
        markerSize = 3 ; %2
    case 2
        markerSize = 1 ;%3 ;
end
    

scale = 4 ; % 2; % 4
Lstub = 3.0*scale ;
Lbar  = 10*scale ;

azview = -43 ;
elview =  26 ;

tvec = (0:data.Nimages-1) + data.params.startTrackingTime ; 
tvec = tvec / 8000 * 1000 ; % in ms

i = startFrame ;

figure(1); clf ; hold on;
plot3(0,0,0) ; % need this to have the plot toolbar.

rollTstring = ['stubvec  = Lstub * RotatePoint(normRolls(i,:),[0 0 0],rollHats(i,:),90);' ...
        'delete(stubline);' ...
        'stubline = line([cb(1),cb(1)+stubvec(1)],  [cb(2),cb(2)+stubvec(2)],   [cb(3),cb(3)+stubvec(3)],''Color'',''k'',''LineWidth'',8);' ...
        'nr       = line([cb(1)+stubvec(1)-Lbar*normRolls(i,1),cb(1)+stubvec(1)+Lbar*normRolls(i,1)],  [cb(2)+stubvec(2)-Lbar*normRolls(i,2),cb(2)+stubvec(2)+Lbar*normRolls(i,2)],   [cb(3)+stubvec(3)-Lbar*normRolls(i,3),cb(3)+stubvec(3)+Lbar*normRolls(i,3)],''Color'',''k'',''LineWidth'',8);'...
        'ph = line([cb(1),cb(1)+scale*7*psiHats(i,1)],[cb(2),cb(2)+scale*7*psiHats(i,2)],[cb(3),cb(3)+scale*7*psiHats(i,3)],''Color'',''r'',''LineWidth'',8);'];

%% DEFINE GUI (before main loop)
% GUI for flagging bad points and allowing user to adjust coordinates
    left = 20  ;
    if (PC==1)
        top  = 800 - 0*200 ;
    else
        top = 600 ;
    end
    
    % x ****************************************
    uicontrol('style','text',...
        'string','x',...
        'fontsize',12, ...
        'position',[left, top, 100, 20]);

    %action when flag_x button is pressed
    flag_x= ['flags(i,2) = abs(flags(i,2)-1);']; %#ok<*NBRAK>

    %define the flag_x button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top, 20, 20], ...
        'callback', flag_x);

	%action when x_ff button is pressed
    x_ff = ...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(1) = cb(1)+10;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);' ...        
        'eval(rollTstring);' ...
        'adjust(i,2) = adjust(i,2)+10;'];        
        
    %define the x_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top, 40, 20], ...
        'callback', x_ff); %#ok<*NASGU>
    
    %action when x_bb button is pressed
    x_bb =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(1) = cb(1)-10;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,2) = adjust(i,2)-10;'];
    
    %define the x_bb button
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top, 40, 20], ...
        'callback', x_bb);
        
    %action when x_f button is pressed
    x_f =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(1) = cb(1)+1;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,2) = adjust(i,2)+1;'];

    %define the x_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top, 20, 20], ...
        'callback', x_f);
    
    %action when x_b button is pressed
    x_b =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(1) = cb(1)-1;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,2) = adjust(i,2)-1;'];

    %define the x_b button
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top, 20, 20], ...
        'callback', x_b);
    
        
        
    % y ****************************************
    uicontrol('style','text',...
        'string','y',...
        'fontsize',12, ...
        'position',[left, top-20, 100, 20]);

    %action when flag_y button is pressed
    flag_y= ['flags(i,3) = abs(flags(i,3)-1);'];

    %define the flag_y button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-20, 20, 20], ...
        'callback', flag_y);
    
    %action when y_ff button is pressed
    y_ff =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(2) = cb(2)+10;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,3) = adjust(i,3)+10;'];

    %define the y_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-20, 40, 20], ...
        'callback', y_ff);
    
    %action when y_bb button is pressed
    y_bb =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(2) = cb(2)-10;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,3) = adjust(i,3)-10;'];
    
    %define the y_bb button
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-20, 40, 20], ...
        'callback', y_bb);
        
    %action when y_f button is pressed
    y_f =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(2) = cb(2)+1;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,3) = adjust(i,3)+1;'];

    %define the y_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-20, 20, 20], ...
        'callback', y_f);
    
    %action when y_b button is pressed
    y_b =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(2) = cb(2)-1;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,3) = adjust(i,3)-1;'];

    %define the y_b button
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-20, 20, 20], ...
        'callback', y_b);    
        
        
    
    % z ****************************************
    uicontrol('style','text',...
        'string','z',...
        'fontsize',12, ...
        'position',[left, top-2*20, 100, 20]);

    %action when flag_z button is pressed
    flag_z= ['flags(i,4) = abs(flags(i,4)-1);'];

    %define the flag_z button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-2*20, 20, 20], ...
        'callback', flag_z);
    
    %action when z_ff button is pressed
    z_ff =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(3) = cb(3)+10;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,4) = adjust(i,4)+10;'];

    %define the z_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-2*20, 40, 20], ...
        'callback', z_ff);
    
    %action when z_bb button is pressed
    z_bb =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(3) = cb(3)-10;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,4) = adjust(i,4)-10;'];
    
    %define the z_bb button
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-2*20, 40, 20], ...
        'callback', z_bb);
        
    %action when z_f button is pressed
    z_f =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(3) = cb(3)+1;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,4) = adjust(i,4)+1;'];

    %define the z_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-2*20, 20, 20], ...
        'callback', z_f);
    
    %action when z_b button is pressed
    z_b =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'cb(3) = cb(3)-1;'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,4) = adjust(i,4)-1;'];

    %define the z_b button
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-2*20, 20, 20], ...
        'callback', z_b);
        
        
    % psi ****************************************
    uicontrol('style','text', ...
        'string','yaw',...
        'fontsize',12, ...
        'position',[left, top-3*20, 100, 20]);

    %action when flag_psi button is pressed
    flag_psi= ['flags(i,5) = abs(flags(i,5)-1);'];

    %define the flag_psi button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-3*20, 20, 20], ...
        'callback', flag_psi);
    
    %action when psi_ff button is pressed
    psi_ff =...
        [ 'gca; ' ' delete(rh);' 'delete(nr);' 'delete(ph);'...
        'rollHats(i,:) = RotatePoint(rollHats(i,:),[0 0 0],[0 0 1],10);' 'normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],[0 0 1],10);' 'psiHats(i,:) = RotatePoint(psiHats(i,:),[0 0 0],[0 0 1],10);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,5) = adjust(i,5)+10;'];

    %define the psi_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-3*20, 40, 20], ...
        'callback', psi_ff);
    
    %action when psi_bb button is pressed
    psi_bb =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'rollHats(i,:) = RotatePoint(rollHats(i,:),[0 0 0],[0 0 1],-10);' 'normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],[0 0 1],-10);' 'psiHats(i,:) = RotatePoint(psiHats(i,:),[0 0 0],[0 0 1],-10);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,5) = adjust(i,5)-10;'];
    
    %define the psi_bb button    
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-3*20, 40, 20], ...
        'callback', psi_bb);
    
    %action when psi_f button is pressed
    psi_f =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'rollHats(i,:) = RotatePoint(rollHats(i,:),[0 0 0],[0 0 1],1);' 'normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],[0 0 1],1);' 'psiHats(i,:) = RotatePoint(psiHats(i,:),[0 0 0],[0 0 1],1);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,5) = adjust(i,5)+1;'];

    %define the psi_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-3*20, 20, 20], ...
        'callback', psi_f);
    
    %action when psi_b button is pressed
    psi_b =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'rollHats(i,:) = RotatePoint(rollHats(i,:),[0 0 0],[0 0 1],-1);' 'normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],[0 0 1],-1);' 'psiHats(i,:) = RotatePoint(psiHats(i,:),[0 0 0],[0 0 1],-1);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,5) = adjust(i,5)-1;'];
       
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-3*20, 20, 20], ...
        'callback', psi_b);
    
    % beta ****************************************
    uicontrol('style','text',...
        'string','pitch',...
        'fontsize',12, ...
        'position',[left, top-4*20, 100, 20]);

    %action when flag_beta button is pressed
    flag_beta= ['flags(i,6) = abs(flags(i,6)-1);'];

    %define the flag_beta button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-4*20, 20, 20], ...
        'callback', flag_beta);
    
    %action when beta_ff button is pressed
    beta_ff =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'rollHats(i,:) = RotatePoint2(rollHats(i,:),[0 0 0],psiHats(i,:),10);' 'normRolls(i,:) = RotatePoint2(normRolls(i,:),[0 0 0],psiHats(i,:),10);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,6) = adjust(i,6)+10;'];

    %define the beta_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-4*20, 40, 20], ...
        'callback', beta_ff);
    
    %action when beta_bb button is pressed
    beta_bb =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'rollHats(i,:) = RotatePoint2(rollHats(i,:),[0 0 0],psiHats(i,:),-10);' 'normRolls(i,:) = RotatePoint2(normRolls(i,:),[0 0 0],psiHats(i,:),-10);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,6) = adjust(i,6)-10;'];
    
    %define the beta_bb button    
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-4*20, 40, 20], ...
        'callback', beta_bb);
    
    %action when beta_f button is pressed
    beta_f =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'rollHats(i,:) = RotatePoint2(rollHats(i,:),[0 0 0],psiHats(i,:),1);' 'normRolls(i,:) = RotatePoint2(normRolls(i,:),[0 0 0],psiHats(i,:),1);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,6) = adjust(i,6)+1;'];

    %define the beta_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-4*20, 20, 20], ...
        'callback', beta_f);
    
    %action when beta_b button is pressed
    beta_b =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'rollHats(i,:) = RotatePoint2(rollHats(i,:),[0 0 0],psiHats(i,:),-1);' 'normRolls(i,:) = RotatePoint2(normRolls(i,:),[0 0 0],psiHats(i,:),-1);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,6) = adjust(i,6)-1;'];
       
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-4*20, 20, 20], ...
        'callback', beta_b);
    
        
    % rho ****************************************
    uicontrol('style','text',...
        'string','roll',...
        'fontsize',12, ...
        'position',[left, top-5*20, 100, 20]);

    %action when flag_rho button is pressed
    flag_rho= ['flags(i,7) = abs(flags(i,7)-1);disp(''BLAAAA'');'];

    %lag_rho= ['flags(i,7) = 1;disp(''BLAAAA'');'];
    
    %define the flag_rho button
    h_rho_checkbox = uicontrol('style','checkbox',...
        'position',[left+100, top-5*20, 20, 20], ...
        'callback', flag_rho, 'Value',flags(i,7)==1);
    
    %action when rho_ff button is pressed
    rho_ff =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);' ...        
        'normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],rollHats(i,:),10);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,7) = adjust(i,7)+10;'];

    %define the rho_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-5*20, 40, 20], ...
        'callback', rho_ff);
    
    %action when rho_bb button is pressed
    rho_bb =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],rollHats(i,:),-10);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,7) = adjust(i,7)-10;'];
    
    %define the rho_bb button    
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-5*20, 40, 20], ...
        'callback', rho_bb);
    
    %action when rho_f button is pressed
    rho_f =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],rollHats(i,:),1);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,7) = adjust(i,7)+1;'];

    %define the rho_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-5*20, 20, 20], ...
        'callback', rho_f);
    
    %action when rho_b button is pressed
    rho_b =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],rollHats(i,:),-1);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,7) = adjust(i,7)-1;'];
       
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-5*20, 20, 20], ...
        'callback', rho_b);
    
    
        
    % right wing   
    % x ****************************************
    uicontrol('style','text',...
        'string','r x',...
        'fontsize',12, ...
        'position',[left, top-7*20, 100, 20]);

    %action when flag_rx button is pressed
    flag_rx= ['flags(i,8) = abs(flags(i,8)-1);'];

    %define the flag_rx button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-7*20, 20, 20], ...
        'callback', flag_rx);
    
    %action when rx_ff button is pressed
    rx_ff = ...
        ['gca;' 'delete(s1);' 'delete(c1);' ...  %'delete(c12);' 'delete(p1h);'...
        'cr(1) = cr(1)+10;' ...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...  
        'adjust(i,8) = adjust(i,8)+10;'];

    %define the rx_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-7*20, 40, 20], ...
        'callback', rx_ff);
    
    %action when rx_bb button is pressed
    rx_bb =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(1) = cr(1)-10;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,8) = adjust(i,8)-10;'];
    
    %define the rx_bb button
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-7*20, 40, 20], ...
        'callback', rx_bb);
        
    %action when rx_f button is pressed
    rx_f =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(1) = cr(1)+0.5;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,8) = adjust(i,8)+1;'];

    %define the rx_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-7*20, 20, 20], ...
        'callback', rx_f);
    
    %action when rx_b button is pressed
    rx_b =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(1) = cr(1)-0.5;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,8) = adjust(i,8)-1;'];

    %define the rx_b button
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-7*20, 20, 20], ...
        'callback', rx_b);
    
    % y ****************************************
    uicontrol('style','text',...
        'string','r y',...
        'fontsize',12, ...
        'position',[left, top-8*20, 100, 20]);

    %action when flag_ry button is pressed
    flag_ry= ['flags(i,9) = abs(flags(i,9)-1);'];

    %define the flag_ry button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-8*20, 20, 20], ...
        'callback', flag_ry);
    
    %action when ry_ff button is pressed
    ry_ff =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(2) = cr(2)+10;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,9) = adjust(i,9)+10;'];

    %define the ry_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-8*20, 40, 20], ...
        'callback', ry_ff);
    
    %action when ry_bb button is pressed
    ry_bb =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(2) = cr(2)-10;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,9) = adjust(i,9)-10;'];
    
    %define the ry_bb button
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-8*20, 40, 20], ...
        'callback', ry_bb);
        
    %action when ry_f button is pressed
    ry_f =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(2) = cr(2)+0.5;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,9) = adjust(i,9)+1;'];

    %define the ry_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-8*20, 20, 20], ...
        'callback', ry_f);
    
    %action when ry_b button is pressed
    ry_b =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(2) = cr(2)-0.5;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,9) = adjust(i,9)-1;'];

    %define the ry_b button
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-8*20, 20, 20], ...
        'callback', ry_b);
    
    % z ****************************************
    uicontrol('style','text',...
        'string','r z',...
        'fontsize',12, ...
        'position',[left, top-9*20, 100, 20]);

    %action when flag_rz button is pressed
    flag_rz= ['flags(i,10) = abs(flags(i,10)-1);'];

    %define the flag_rz button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-9*20, 20, 20], ...
        'callback', flag_rz);
    
    %action when rz_ff button is pressed
    rz_ff =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(3) = cr(3)+10;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,10) = adjust(i,10)+10;'];

    %define the rz_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-9*20, 40, 20], ...
        'callback', rz_ff);
    
    %action when rz_bb button is pressed
    rz_bb =...
        ['gca;' 'delete(s1);' 'delete(c1);'...
        'cr(3) = cr(3)-10;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,10) = adjust(i,10)-10;'];
    
    %define the rz_bb button
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-9*20, 40, 20], ...
        'callback', rz_bb);
        
    %action when rz_f button is pressed
    rz_f =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(3) = cr(3)+0.5;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,10) = adjust(i,10)+1;'];

    %define the rz_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-9*20, 20, 20], ...
        'callback', rz_f);
    
    %action when rz_b button is pressed
    rz_b =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'cr(3) = cr(3)-0.5;'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,10) = adjust(i,10)-1;'];

    %define the rz_b button
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-9*20, 20, 20], ...
        'callback', rz_b);
    
        
        
    % phi ****************************************
    uicontrol('style','text', ...
        'string','r phi',...
        'fontsize',12, ...
        'position',[left, top-10*20, 100, 20]);

    %action when flag_rphi button is pressed
    flag_rphi= ['flags(i,11) = abs(flags(i,11)-1);'];

    %define the flag_rphi button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-10*20, 20, 20], ...
        'callback', flag_rphi);
    
    %action when rphi_ff button is pressed
    rphi_ff =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'span1Hats(i,:) = RotatePoint(span1Hats(i,:),[0 0 0],[0 0 1],10);' 'chord1Hats(i,:) = RotatePoint(chord1Hats(i,:),[0 0 0],[0 0 1],10);' 'chord1Hat2s(i,:) = RotatePoint(chord1Hat2s(i,:),[0 0 0],[0 0 1],10);' 'phi1Hats(i,:) = RotatePoint(phi1Hats(i,:),[0 0 0],[0 0 1],10);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,11) = adjust(i,11)+10;'];

    %define the rphi_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-10*20, 40, 20], ...
        'callback', rphi_ff);
    
    %action when rphi_bb button is pressed
    rphi_bb =...
        ['gca;' 'delete(s1);' 'delete(c1);'...
        'span1Hats(i,:) = RotatePoint(span1Hats(i,:),[0 0 0],[0 0 1],-10);' 'chord1Hats(i,:) = RotatePoint(chord1Hats(i,:),[0 0 0],[0 0 1],-10);' 'chord1Hat2s(i,:) = RotatePoint(chord1Hat2s(i,:),[0 0 0],[0 0 1],-10);' 'phi1Hats(i,:) = RotatePoint(phi1Hats(i,:),[0 0 0],[0 0 1],-10);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...        
        'adjust(i,11) = adjust(i,11)-10;'];
    
    %define the rphi_bb button    
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-10*20, 40, 20], ...
        'callback', rphi_bb);
    
    %action when rphi_f button is pressed
    rphi_f =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'span1Hats(i,:) = RotatePoint(span1Hats(i,:),[0 0 0],[0 0 1],1);' 'chord1Hats(i,:) = RotatePoint(chord1Hats(i,:),[0 0 0],[0 0 1],1);' 'chord1Hat2s(i,:) = RotatePoint(chord1Hat2s(i,:),[0 0 0],[0 0 1],1);' 'phi1Hats(i,:) = RotatePoint(phi1Hats(i,:),[0 0 0],[0 0 1],1);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,11) = adjust(i,11)+1;'];

    %define the rphi_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-10*20, 20, 20], ...
        'callback', rphi_f);
    
    %action when rphi_b button is pressed
    rphi_b =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'span1Hats(i,:) = RotatePoint(span1Hats(i,:),[0 0 0],[0 0 1],-1);' 'chord1Hats(i,:) = RotatePoint(chord1Hats(i,:),[0 0 0],[0 0 1],-1);' 'chord1Hat2s(i,:) = RotatePoint(chord1Hat2s(i,:),[0 0 0],[0 0 1],-1);' 'phi1Hats(i,:) = RotatePoint(phi1Hats(i,:),[0 0 0],[0 0 1],-1);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,11) = adjust(i,11)-1;'];
       
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-10*20, 20, 20], ...
        'callback', rphi_b);
    
    
        
    % theta ****************************************
    uicontrol('style','text',...
        'string','r theta',...
        'fontsize',12, ...
        'position',[left, top-11*20, 100, 20]);

    %action when flag_rtheta button is pressed
    flag_rtheta= ['flags(i,12) = abs(flags(i,12)-1);'];

    %define the flag_rtheta button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-11*20, 20, 20], ...
        'callback', flag_rtheta);
    
    %action when rtheta_ff button is pressed
    rtheta_ff =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'span1Hats(i,:) = RotatePoint2(span1Hats(i,:),[0 0 0],phi1Hats(i,:),10);' 'chord1Hats(i,:) = RotatePoint2(chord1Hats(i,:),[0 0 0],phi1Hats(i,:),10);' 'chord1Hat2s(i,:) = RotatePoint2(chord1Hat2s(i,:),[0 0 0],phi1Hats(i,:),10);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,12) = adjust(i,12)+10;'];

    %define the rtheta_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-11*20, 40, 20], ...
        'callback', rtheta_ff);
    
    %action when rtheta_bb button is pressed
    rtheta_bb =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'span1Hats(i,:) = RotatePoint2(span1Hats(i,:),[0 0 0],phi1Hats(i,:),-10);' 'chord1Hats(i,:) = RotatePoint2(chord1Hats(i,:),[0 0 0],phi1Hats(i,:),-10);' 'chord1Hat2s(i,:) = RotatePoint2(chord1Hat2s(i,:),[0 0 0],phi1Hats(i,:),-10);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,12) = adjust(i,12)-10;'];
    
    %define the rtheta_bb button    
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-11*20, 40, 20], ...
        'callback', rtheta_bb);
    
    %action when rtheta_f button is pressed
    rtheta_f =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'span1Hats(i,:) = RotatePoint2(span1Hats(i,:),[0 0 0],phi1Hats(i,:),1);' 'chord1Hats(i,:) = RotatePoint2(chord1Hats(i,:),[0 0 0],phi1Hats(i,:),1);' 'chord1Hat2s(i,:) = RotatePoint2(chord1Hat2s(i,:),[0 0 0],phi1Hats(i,:),1);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,12) = adjust(i,12)+1;'];

    %define the rtheta_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-11*20, 20, 20], ...
        'callback', rtheta_f);
    
    %action when rtheta_b button is pressed
    rtheta_b =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'span1Hats(i,:) = RotatePoint2(span1Hats(i,:),[0 0 0],phi1Hats(i,:),-1);' 'chord1Hats(i,:) = RotatePoint2(chord1Hats(i,:),[0 0 0],phi1Hats(i,:),-1);' 'chord1Hat2s(i,:) = RotatePoint2(chord1Hat2s(i,:),[0 0 0],phi1Hats(i,:),-1);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,12) = adjust(i,12)-1;'];
       
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-11*20, 20, 20], ...
        'callback', rtheta_b);
    
        
    
    % eta ****************************************
    uicontrol('style','text',...
        'string','r eta',...
        'fontsize',12, ...
        'position',[left, top-12*20, 100, 20]);

    %action when flag_reta button is pressed
    flag_reta= ['flags(i,13) = abs(flags(i,13)-1);'];

    %define the flag_reta button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-12*20, 20, 20], ...
        'callback', flag_reta);
    
    %action when reta_ff button is pressed
    reta_ff =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'chord1Hats(i,:) = RotatePoint(chord1Hats(i,:),[0 0 0],span1Hats(i,:),10);' 'chord1Hat2s(i,:) = RotatePoint(chord1Hat2s(i,:),[0 0 0],span1Hats(i,:),-10);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,13) = adjust(i,13)+10;'];

    %define the reta_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-12*20, 40, 20], ...
        'callback', reta_ff);
    
    %action when reta_bb button is pressed
    reta_bb =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'chord1Hats(i,:) = RotatePoint(chord1Hats(i,:),[0 0 0],span1Hats(i,:),-10);' 'chord1Hat2s(i,:) = RotatePoint(chord1Hat2s(i,:),[0 0 0],span1Hats(i,:),10);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,13) = adjust(i,13)-10;'];
    
    %define the reta_bb button    
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-12*20, 40, 20], ...
        'callback', reta_bb);
    
    %action when reta_f button is pressed
    reta_f =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'chord1Hats(i,:) = RotatePoint(chord1Hats(i,:),[0 0 0],span1Hats(i,:),1);' 'chord1Hat2s(i,:) = RotatePoint(chord1Hat2s(i,:),[0 0 0],span1Hats(i,:),-1);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,13) = adjust(i,13)+1;'];

    %define the reta_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-12*20, 20, 20], ...
        'callback', reta_f);
    
    %action when reta_b button is pressed
    reta_b =...
        ['gca;' 'delete(s1);' 'delete(c1);' ...
        'chord1Hats(i,:) = RotatePoint(chord1Hats(i,:),[0 0 0],span1Hats(i,:),-1);' 'chord1Hat2s(i,:) = RotatePoint(chord1Hat2s(i,:),[0 0 0],span1Hats(i,:),1);'...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        'adjust(i,13) = adjust(i,13)-1;'];
       
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-12*20, 20, 20], ...
        'callback', reta_b);
    
    % flip right wing ****************************************
    uicontrol('style','text',...
        'string','r flip?',...
        'fontsize',12, ...
        'position',[left, top-13*20, 100, 20]);

    %action when flip_right button is pressed
    flip_right = ['flip1(i) = 1;'];

    %define the flip_right button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-13*20, 20, 20], ...
        'callback', flip_right);
    
        
        
        
    
        
    % left wing   
    % x ****************************************
    uicontrol('style','text',...
        'string','l x',...
        'fontsize',12, ...
        'position',[left, top-14*20, 100, 20]);

    %action when flag_lx button is pressed
    flag_lx= ['flags(i,14) = abs(flags(i,14)-1);'];

    %define the flag_lx button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-14*20, 20, 20], ...
        'callback', flag_lx);
    
    %action when lx_ff button is pressed
    lx_ff =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(1) = cl(1)+10;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,14) = adjust(i,14)+10;'];

    %define the lx_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-14*20, 40, 20], ...
        'callback', lx_ff);
    
    %action when lx_bb button is pressed
    lx_bb =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(1) = cl(1)-10;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...        
        'adjust(i,14) = adjust(i,14)-10;'];
    
    %define the lx_bb button
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-14*20, 40, 20], ...
        'callback', lx_bb);
        
    %action when lx_f button is pressed
    lx_f =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(1) = cl(1)+0.5;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,14) = adjust(i,14)+1;'];

    %define the lx_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-14*20, 20, 20], ...
        'callback', lx_f);
    
    %action when lx_b button is pressed
    lx_b =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(1) = cl(1)-0.5;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,14) = adjust(i,14)-1;'];

    %define the lx_b button
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-14*20, 20, 20], ...
        'callback', lx_b);    
        
    
    % y ****************************************
    uicontrol('style','text',...
        'string','l y',...
        'fontsize',12, ...
        'position',[left, top-15*20, 100, 20]);

    %action when flag_ly button is pressed
    flag_ly= ['flags(i,15) = abs(flags(i,15)-1);'];

    %define the flag_ly button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-15*20, 20, 20], ...
        'callback', flag_ly);
    
    %action when ly_ff button is pressed
    ly_ff =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(2) = cl(2)+10;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,15) = adjust(i,15)+10;'];

    %define the ly_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-15*20, 40, 20], ...
        'callback', ly_ff);
    
    %action when ly_bb button is pressed
    ly_bb =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(2) = cl(2)-10;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,15) = adjust(i,15)-10;'];
    
    %define the ly_bb button
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-15*20, 40, 20], ...
        'callback', ly_bb);
        
    %action when ly_f button is pressed
    ly_f =...
        ['gca;' 'delete(s2);' 'delete(c2);'...
        'cl(2) = cl(2)+0.5;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,15) = adjust(i,15)+1;'];

    %define the ly_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-15*20, 20, 20], ...
        'callback', ly_f);
    
    %action when ly_b button is pressed
    ly_b =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(2) = cl(2)-0.5;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,15) = adjust(i,15)-1;'];

    %define the ly_b button
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-15*20, 20, 20], ...
        'callback', ly_b);    
        
        
    
    % z ****************************************
    uicontrol('style','text',...
        'string','l z',...
        'fontsize',12, ...
        'position',[left, top-16*20, 100, 20]);

    %action when flag_lz button is pressed
    flag_lz= ['flags(i,16) = abs(flags(i,16)-1);'];

    %define the flag_lz button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-16*20, 20, 20], ...
        'callback', flag_lz);
    
    %action when lz_ff button is pressed
    lz_ff =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(3) = cl(3)+10;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,16) = adjust(i,16)+10;'];

    %define the lz_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-16*20, 40, 20], ...
        'callback', lz_ff);
    
    %action when lz_bb button is pressed
    lz_bb =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(3) = cl(3)-10;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,16) = adjust(i,16)-10;'];
    
    %define the lz_bb button
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-16*20, 40, 20], ...
        'callback', lz_bb);
        
    %action when lz_f button is pressed
    lz_f =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(3) = cl(3)+0.5;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,16) = adjust(i,16)+1;'];

    %define the lz_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-16*20, 20, 20], ...
        'callback', lz_f);
    
    %action when lz_b button is pressed
    lz_b =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'cl(3) = cl(3)-0.5;'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,16) = adjust(i,16)-1;'];

    %define the lz_b button
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-16*20, 20, 20], ...
        'callback', lz_b);
        
        
        
    % phi ****************************************
    uicontrol('style','text', ...
        'string','l phi',...
        'fontsize',12, ...
        'position',[left, top-17*20, 100, 20]);

    %action when flag_lphi button is pressed
    flag_lphi= ['flags(i,17) = abs(flags(i,17)-1);'];

    %define the flag_lphi button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-17*20, 20, 20], ...
        'callback', flag_lphi);
    
    %action when lphi_ff button is pressed
    lphi_ff =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'span2Hats(i,:) = RotatePoint(span2Hats(i,:),[0 0 0],[0 0 1],10);' 'chord2Hats(i,:) = RotatePoint(chord2Hats(i,:),[0 0 0],[0 0 1],10);' 'chord2Hat2s(i,:) = RotatePoint(chord2Hat2s(i,:),[0 0 0],[0 0 1],10);' '(i,:) = RotatePoint(phi2Hats(i,:),[0 0 0],[0 0 1],10);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,17) = adjust(i,17)+10;'];

    %define the lphi_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-17*20, 40, 20], ...
        'callback', lphi_ff);
    
    %action when lphi_bb button is pressed
    lphi_bb =...
        ['gca;' 'delete(s2);' 'delete(c2);'...
        'span2Hats(i,:) = RotatePoint(span2Hats(i,:),[0 0 0],[0 0 1],-10);' 'chord2Hats(i,:) = RotatePoint(chord2Hats(i,:),[0 0 0],[0 0 1],-10);' 'chord2Hat2s(i,:) = RotatePoint(chord2Hat2s(i,:),[0 0 0],[0 0 1],-10);' 'phi2Hats(i,:) = RotatePoint(phi2Hats(i,:),[0 0 0],[0 0 1],-10);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,17) = adjust(i,17)-10;'];
    
    %define the lphi_bb button    
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-17*20, 40, 20], ...
        'callback', lphi_bb);
    
    %action when lphi_f button is pressed
    lphi_f =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'span2Hats(i,:) = RotatePoint(span2Hats(i,:),[0 0 0],[0 0 1],1);' 'chord2Hats(i,:) = RotatePoint(chord2Hats(i,:),[0 0 0],[0 0 1],1);' 'chord2Hat2s(i,:) = RotatePoint(chord2Hat2s(i,:),[0 0 0],[0 0 1],1);' 'phi2Hats(i,:) = RotatePoint(phi2Hats(i,:),[0 0 0],[0 0 1],1);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,17) = adjust(i,17)+1;'];

    %define the lphi_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-17*20, 20, 20], ...
        'callback', lphi_f);
    
    %action when lphi_b button is pressed
    lphi_b =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'span2Hats(i,:) = RotatePoint(span2Hats(i,:),[0 0 0],[0 0 1],-1);' 'chord2Hats(i,:) = RotatePoint(chord2Hats(i,:),[0 0 0],[0 0 1],-1);' 'chord2Hat2s(i,:) = RotatePoint(chord2Hat2s(i,:),[0 0 0],[0 0 1],-1);' 'phi2Hats(i,:) = RotatePoint(phi2Hats(i,:),[0 0 0],[0 0 1],-1);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,17) = adjust(i,17)-1;'];
       
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-17*20, 20, 20], ...
        'callback', lphi_b);
        
        
        
    
    % theta ****************************************
    uicontrol('style','text',...
        'string','l theta',...
        'fontsize',12, ...
        'position',[left, top-18*20, 100, 20]);

    %action when flag_ltheta button is pressed
    flag_ltheta= ['flags(i,18) = abs(flags(i,18)-1);'];

    %define the flag_ltheta button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-18*20, 20, 20], ...
        'callback', flag_ltheta);
    
    %action when ltheta_ff button is pressed
    ltheta_ff =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'span2Hats(i,:) = RotatePoint2(span2Hats(i,:),[0 0 0],phi2Hats(i,:),10);' 'chord2Hats(i,:) = RotatePoint2(chord2Hats(i,:),[0 0 0],phi2Hats(i,:),10);' 'chord2Hat2s(i,:) = RotatePoint2(chord2Hat2s(i,:),[0 0 0],phi2Hats(i,:),10);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,18) = adjust(i,18)+10;'];

    %define the ltheta_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-18*20, 40, 20], ...
        'callback', ltheta_ff);
    
    %action when ltheta_bb button is pressed
    ltheta_bb =...
        ['gca;' 'delete(s2);' 'delete(c2);'...
        'span2Hats(i,:) = RotatePoint2(span2Hats(i,:),[0 0 0],phi2Hats(i,:),-10);' 'chord2Hats(i,:) = RotatePoint2(chord2Hats(i,:),[0 0 0],phi2Hats(i,:),-10);' 'chord2Hat2s(i,:) = RotatePoint2(chord2Hat2s(i,:),[0 0 0],phi2Hats(i,:),-10);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,18) = adjust(i,18)-10;'];
    
    %define the ltheta_bb button    
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-18*20, 40, 20], ...
        'callback', ltheta_bb);
    
    %action when ltheta_f button is pressed
    ltheta_f =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'span2Hats(i,:) = RotatePoint2(span2Hats(i,:),[0 0 0],phi2Hats(i,:),1);' 'chord2Hats(i,:) = RotatePoint2(chord2Hats(i,:),[0 0 0],phi2Hats(i,:),1);' 'chord2Hat2s(i,:) = RotatePoint2(chord2Hat2s(i,:),[0 0 0],phi2Hats(i,:),1);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,18) = adjust(i,18)+1;'];

    %define the ltheta_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-18*20, 20, 20], ...
        'callback', ltheta_f);
    
    %action when ltheta_b button is pressed
    ltheta_b =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'span2Hats(i,:) = RotatePoint2(span2Hats(i,:),[0 0 0],phi2Hats(i,:),-1);' 'chord2Hats(i,:) = RotatePoint2(chord2Hats(i,:),[0 0 0],phi2Hats(i,:),-1);' 'chord2Hat2s(i,:) = RotatePoint2(chord2Hat2s(i,:),[0 0 0],phi2Hats(i,:),-1);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,18) = adjust(i,18)-1;'];
       
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-18*20, 20, 20], ...
        'callback', ltheta_b);
        
    
    % eta ****************************************
    uicontrol('style','text',...
        'string','l eta',...
        'fontsize',12, ...
        'position',[left, top-19*20, 100, 20]);

    %action when flag_leta button is pressed
    flag_leta= ['flags(i,19) = abs(flags(i,19)-1);'];

    %define the flag_leta button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-19*20, 20, 20], ...
        'callback', flag_leta);
    
    %action when leta_ff button is pressed
    leta_ff =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'chord2Hats(i,:) = RotatePoint(chord2Hats(i,:),[0 0 0],span2Hats(i,:),10);' 'chord2Hat2s(i,:) = RotatePoint(chord2Hat2s(i,:),[0 0 0],span2Hats(i,:),-10);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,19) = adjust(i,19)+10;'];

    %define the leta_ff button
    plotbutton=uicontrol('style','pushbutton',...
        'string','++', ...
        'fontsize',12, ...
        'position',[left+100+40, top-19*20, 40, 20], ...
        'callback', leta_ff);
    
    %action when leta_bb button is pressed
    leta_bb =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'chord2Hats(i,:) = RotatePoint(chord2Hats(i,:),[0 0 0],span2Hats(i,:),-10);' 'chord2Hat2s(i,:) = RotatePoint(chord2Hat2s(i,:),[0 0 0],span2Hats(i,:),10);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,19) = adjust(i,19)-10;'];
    
    %define the leta_bb button    
    plotbutton=uicontrol('style','pushbutton',...
        'string','--', ...
        'fontsize',12, ...
        'position',[left+100+80, top-19*20, 40, 20], ...
        'callback', leta_bb);
    
    %action when leta_f button is pressed
    leta_f =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'chord2Hats(i,:) = RotatePoint(chord2Hats(i,:),[0 0 0],span2Hats(i,:),1);' 'chord2Hat2s(i,:) = RotatePoint(chord2Hat2s(i,:),[0 0 0],span2Hats(i,:),-1);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,19) = adjust(i,19)+1;'];

    %define the leta_f button
    plotbutton=uicontrol('style','pushbutton',...
        'string','+', ...
        'fontsize',12, ...
        'position',[left+100+120, top-19*20, 20, 20], ...
        'callback', leta_f);
    
    %action when leta_b button is pressed
    leta_b =...
        ['gca;' 'delete(s2);' 'delete(c2);' ...
        'chord2Hats(i,:) = RotatePoint(chord2Hats(i,:),[0 0 0],span2Hats(i,:),-1);' 'chord2Hat2s(i,:) = RotatePoint(chord2Hat2s(i,:),[0 0 0],span2Hats(i,:),1);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        'adjust(i,19) = adjust(i,19)-1;'];
       
    plotbutton=uicontrol('style','pushbutton',...
        'string','-', ...
        'fontsize',12, ...
        'position',[left+100+140, top-19*20, 20, 20], ...
        'callback', leta_b);
    
    % flip left wing ****************************************
    uicontrol('style','text',...
        'string','l flip?',...
        'fontsize',12, ...
        'position',[left, top-20*20, 100, 20]);

    %action when flip_left button is pressed
    flip_left = ['flip2(i) = 1;'];

    %define the flip_left button
    h = uicontrol('style','checkbox',...
        'position',[left+100, top-20*20, 20, 20], ...
        'callback', flip_left);    
    
        
    % swap wings ****************************************
    uicontrol('style','text',...
        'string','swap?',...
        'fontsize',12, ...
        'position',[left, top-21*20, 100, 20]);

    %action when swap_wings button is pressed
    swap_wings = ['swap(i) = abs(swap(i)-1);' 'delete(hrightwing);' 'delete(hleftwing);' ...
        'delete(s1);' 'delete(c1);' 'delete(s2);' 'delete(c2);' ...
        'if swap(i) ;' ...
        'tempRows = rightWingRows ;' 'rightWingRows = leftWingRows ;' 'leftWingRows = tempRows ;'...
        'tempCenter = cr ;' 'cr = cl ;' 'cl = tempCenter ;' ...
        'tempSpan = span1Hats(i,:);' 'span1Hats(i,:) = span2Hats(i,:);' 'span2Hats(i,:) = tempSpan;' ...
        'tempChord = chord1Hats(i,:);' 'chord1Hats(i,:) = chord2Hats(i,:);' 'chord2Hats(i,:) = tempChord;' ...
        'end ;'...
        'hrightwing = plot3(coords(rightWingRows,1), coords(rightWingRows,2), coords(rightWingRows,3),''o'',''color'',rightWingColor,''markersize'',markerSize);' ...
        'hleftwing = plot3(coords(leftWingRows,1), coords(leftWingRows,2), coords(leftWingRows,3),''o'',''color'',leftWingColor,''markersize'',markerSize);' ...
        's1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],''Color'',s1Color,''LineWidth'',4);'...
        'c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],''Color'',c1Color,''LineWidth'',4);'...
        's2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],''Color'',s2Color,''LineWidth'',4);'...
        'c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],''Color'',c2Color,''LineWidth'',4);'...
        ];

    %define the swap_wings button
    h = uicontrol('style','pushbutton',...
        'position',[left+100, top-21*20, 20, 20], ...
        'callback', swap_wings);
    
    
    % pitch flip ****************************************
    uicontrol('style','text',...
        'string','pitch flip?',...
        'fontsize',12, ...
        'position',[left, top-22*20, 100, 20]);
    
    pitchflip =...
        ['gca;' 'delete(rh);' 'delete(nr);' 'delete(ph);'...
        'rollHats(i,:) = RotatePoint2(rollHats(i,:),[0 0 0],psiHats(i,:),180);' 'normRolls(i,:) = RotatePoint2(normRolls(i,:),[0 0 0],psiHats(i,:),180);'...
        'psiHats(i,:) = RotatePoint(psiHats(i,:),[0 0 0],[0 0 1],180);'...
        'rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],''Color'',''r'',''LineWidth'',8);'...
        'eval(rollTstring);' ...
        'adjust(i,6) = adjust(i,6)+180;' ...
        'pitchflipFlag(i) = abs(pitchflipFlag(i)-1);'];       
        %%'normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],rollHats(i,:),180);'...
        
    %define the swap_wings button
    hpitchflip_checkbox = uicontrol('style','pushbutton',...
        'position',[left+100, top-22*20, 20, 20], ...
        'callback', pitchflip);
    
%%
while(i<=Nimages) 
%for i = startFrame:Nimages
    
    % **************************************************
    % Plots to check the voxel reconstruction and coordinates
    % **************************************************
    
    % set the value of the roll (rho) checkbox
    set(h_rho_checkbox, 'Value',flags(i,7)==1);
    
    % clear current line such that corrections from different sessions will
    % not add up
    adjust(i,:) = 0 ; 
    
    row1 = frameStartInd(i) ;
    row2 = frameEndInd(i) ;
    coords = data.res(row1:row2,2:4) ; % xyz
    IDX = data.RESIDX(row1:row2,:) ;  % (isbody, isrightwing, isleftwing)
    % actually we could have used only two bits to encode three 'states'.
    
    bodyRows      = (IDX(:,data.bodyInd)==1) ;
    rightWingRows = (IDX(:,data.rightWingInd)==1) ;
    leftWingRows  = (IDX(:,data.leftWingInd)==1) ;         
    unrelatedRows = find (sum(IDX,2)==0) ; % voxels that are not body nor wings
    
    
    checksum = sum(data.bodyCM(i,:));
    if (isfinite(checksum))    
        cb = data.bodyCM(i,:) ; % data.improvedAHatMidPoints(i,:) ; % + RCM_CORRECTION ; % cb = mean(coords(bodyRows,:)) ;
    else
        cb = data.bodyCM(i-1,:) ;    
        
        chord1Hats(i,:) = data.rightChordHats(i-1,:) ;
        chord2Hats(i,:) = data.leftChordHats(i-1,:) ;
        span1Hats(i,:)  = data.rightSpanHats(i-1,:) ;
        span2Hats(i,:)  = data.leftSpanHats(i-1,:) ;
        rollHats(i,:)   = data.AHat(i-1,:) ; 
    end
    
    checksum = sum(data.rightWingCM(i,:)) ;
    if (isfinite(checksum))
        cr = data.rightWingCM(i,:) ; % mean(coords(rightWingRows,:)) ;
    else
        cr = data.rightWingCM(i-1,:) ;
    end
    
    checksum = sum(data.leftWingCM(i,:)) ;
    if (isfinite(checksum) )
        cl = data.leftWingCM(i,:)  ; % mean(coords(leftWingRows,:)) ;
    else
        cl = data.leftWingCM(i-1,:) ;
    end
    
    checksum = sum(normRolls(i,:));
    if ((~isfinite(checksum) || norm(normRolls(i,:))==0) && (i>1))
        normRolls(i,:) = normRolls(i-1,:) ;
        disp('Using roll vector from previous frame') ;
    end
    
    % if still zero, start with zero roll
    if (norm(normRolls(i,:))==0)        
        normRolls(i,:) = - cross( rollHats(i,:), [0 0 1]) ;
        disp('starting from rho=0') ;
    end
    
    % make sure the roll vector is perpendicular to AHat
    normRolls(i,:) = normRolls(i,:) - rollHats(i,:) * dot(normRolls(i,:), rollHats(i,:)) ;
    
    % and renormalize
    normRolls(i,:) = normRolls(i,:) / norm(normRolls(i,:)) ;
    
    
    %{
    % apply the adjustments that were already given by the user
    cb(1) = cb(1) + adjust(i,2) ;
    cb(2) = cb(2) + adjust(i,3) ;
    cb(3) = cb(3) + adjust(i,4) ;
    
    ang = adjust(i,5) ;
    rollHats(i,:)  = RotatePoint(rollHats(i,:),[0 0 0],[0 0 1],ang); %#ok<SAGROW>
    normRolls(i,:) = RotatePoint(normRolls(i,:),[0 0 0],[0 0 1],ang); %#ok<SAGROW>
    psiHats(i,:)   = RotatePoint(psiHats(i,:),[0 0 0],[0 0 1],ang); %#ok<SAGROW>
    %}
    
    figure(1); hold on;  cla('reset') ;
    hbody = plot3(coords(bodyRows,1), coords(bodyRows,2), coords(bodyRows,3),'o','color',bodyColor, 'markersize',markerSize) ;    
    tm = i + noffset + data.params.firstTrackableFrame - 1 ;
    hold on; axis equal; title(['t=' num2str(tm) '  Frame # ' int2str(i) ' of ' int2str(Nimages) ' t(ms)=' num2str(tvec(i))]);
    grid on ; box on ;
    view() ;
    
    rh = line([cb(1),cb(1)+scale*15*rollHats(i,1)],[cb(2),cb(2)+scale*15*rollHats(i,2)],[cb(3),cb(3)+scale*15*rollHats(i,3)],'Color','r','LineWidth',8);
	
    
    %nr = line([cb(1),cb(1)+scale*7*normRolls(i,1)],[cb(2),cb(2)+scale*7*normRolls(i,2)],[cb(3),cb(3)+scale*7*normRolls(i,3)],'Color','k','LineWidth',8);
    
    % plot the T on the back of the fly to allow input/correction of roll angle
    %stubvec  = Lstub * RotatePoint(normRolls(i,:),[0 0 0],rollHats(i,:),90);    
    %stubline = line([cb(1),cb(1)+stubvec(1)],  [cb(2),cb(2)+stubvec(2)],   [cb(3),cb(3)+stubvec(3)],'Color','k','LineWidth',8);
    %nr       = line([cb(1)+stubvec(1)-scale*7*normRolls(i,1),cb(1)+stubvec(1)+scale*7*normRolls(i,1)],  [cb(2)+stubvec(2)-scale*7*normRolls(i,2),cb(2)+stubvec(2)+scale*7*normRolls(i,2)],   [cb(3)+stubvec(3)-scale*7*normRolls(i,3),cb(3)+stubvec(3)+scale*7*normRolls(i,3)],'Color','k','LineWidth',8);
    %ph = line([cb(1),cb(1)+scale*7*psiHats(i,1)],[cb(2),cb(2)+scale*7*psiHats(i,2)],[cb(3),cb(3)+scale*7*psiHats(i,3)],'Color','r','LineWidth',8);
    % last line for ph is not imporant

    
    
    stubline = [] ; % to avoid an 'invalid handle bug' but still use the string in all buttons below
    eval(rollTstring) ;
    %OLD: nr = line([cb(1)-scale*7*normRolls(i,1),cb(1)+scale*7*normRolls(i,1)], [cb(2)-scale*7*normRolls(i,2),cb(2)+scale*7*normRolls(i,2)],   [cb(3)-scale*7*normRolls(i,3),cb(3)+scale*7*normRolls(i,3)],'Color','k','LineWidth',8);
    
    hrightwing = plot3(coords(rightWingRows,1), coords(rightWingRows,2), coords(rightWingRows,3),'o','color',rightWingColor,'markersize',markerSize);
    
    
    s1 = line([cr(1),cr(1)+scale*10*span1Hats(i,1)],[cr(2),cr(2)+scale*10*span1Hats(i,2)],[cr(3),cr(3)+scale*10*span1Hats(i,3)],'Color',s1Color,'LineWidth',4);
	c1 = line([cr(1),cr(1)+scale*8*chord1Hats(i,1)],[cr(2),cr(2)+scale*8*chord1Hats(i,2)],[cr(3),cr(3)+scale*8*chord1Hats(i,3)],'Color',c1Color,'LineWidth',4);
    % new
    % these vectors were added for visualization purpuses, specificllly to
    % account for wing pitch angle (eta) or (180-eta) and wing flips events
    %c12 = line([cr(1),cr(1)+scale*8*chord1Hat2s(i,1)],[cr(2),cr(2)+scale*8*chord1Hat2s(i,2)],[cr(3),cr(3)+scale*8*chord1Hat2s(i,3)],'Color','m','LineWidth',4);
    %p1h = line([cr(1),cr(1)+scale*8*phi1Hats(i,1)],[cr(2),cr(2)+scale*8*phi1Hats(i,2)],[cr(3),cr(3)+scale*8*phi1Hats(i,3)],'Color','k','LineWidth',4);
    
    hleftwing = plot3(coords(leftWingRows,1), coords(leftWingRows,2), coords(leftWingRows,3),'o','color',leftWingColor,'markersize',markerSize);    
    s2 = line([cl(1),cl(1)+scale*10*span2Hats(i,1)],[cl(2),cl(2)+scale*10*span2Hats(i,2)],[cl(3),cl(3)+scale*10*span2Hats(i,3)],'Color',s2Color,'LineWidth',4);
    c2 = line([cl(1),cl(1)+scale*8*chord2Hats(i,1)],[cl(2),cl(2)+scale*8*chord2Hats(i,2)],[cl(3),cl(3)+scale*8*chord2Hats(i,3)],'Color',c2Color,'LineWidth',4);
    % new
    %c22 = line([cl(1),cl(1)+scale*8*chord2Hat2s(i,1)],[cl(2),cl(2)+scale*8*chord2Hat2s(i,2)],[cl(3),cl(3)+scale*8*chord2Hat2s(i,3)],'Color','m','LineWidth',4);
    %p2h = line([cl(1),cl(1)+scale*8*phi2Hats(i,1)],[cl(2),cl(2)+scale*8*phi2Hats(i,2)],[cl(3),cl(3)+scale*8*phi2Hats(i,3)],'Color','k','LineWidth',4);
    
    plot3(coords(unrelatedRows,1), coords(unrelatedRows,2), coords(unrelatedRows,3),'o','color',unrelatedColor,'markersize',markerSize);
    rotate3d on
    xlabel('x') ; ylabel('y') ; zlabel('z') ;
    
    axis equal ; 
    view(azview,elview) ;
    
    
    
    %disp(['Image ' num2str(i) ' - press any key when done.']) ;
    promptstr = ['Frame ' num2str(i) ', Enter input: b (back), f (+15 fwd) or any key (fwd): '] ;
    userinp = input(promptstr, 's') ;
    
    
    [azview, elview] = view() ;
    %{
    % --------------------------------------
    % keep the vectors corrected by the user
    % --------------------------------------    
    chord1Hats_user(i,:) = chord1Hats(i,:) ; 
    chord2Hats_user(i,:) = chord2Hats(i,:) ; 
    span1Hats_user(i,:)  = span1Hats(i,:)  ; 
    span2Hats_user(i,:)  = span2Hats(i,:)  ; 
    rollHats_user(i,:)   = rollHats(i,:)   ; 
    %}
    % -------------------------------------------------------------
    % re-calculate wings and body angles from the corrected vectors
    % store in the "adjust" matrix. Code taken from hullAnalysis.m
    % -------------------------------------------------------------
    
    % body (lines 259-260)
    psi  = atan2(rollHats(i,2),rollHats(i,1)); % body angle with respect to x axis
    beta = asin(rollHats(i,3));             % body angle with respect to the horizon
    adjust(i,5) = psi  ; 
    adjust(i,6) = beta ; 
    
    % right wing
    % ----------
    
    phi1   = atan2(span1Hats(i,2),span1Hats(i,1));
    theta1 = asin(span1Hats(i,3));
    
    % temp vectors needed to calculate eta1
    phi1Proj = [span1Hats(i,1),span1Hats(i,2),0];
    phi1Proj = phi1Proj / norm(phi1Proj);
    phi1Hat = [-sin(phi1),cos(phi1),0];
    theta1Hat = -phi1Proj*sin(theta1) + [0,0,1]*cos(theta1);
    
    eta1   = atan2( abs(dot(chord1Hats(i,:),theta1Hat)), abs(dot(chord1Hats(i,:),phi1Hat))); 
    
    adjust(i,11) = phi1   ; 
    adjust(i,12) = theta1 ; 
    adjust(i,13) = eta1   ; 
    
    % left wing
    % ---------
    phi2   = atan2(span2Hats(i,2),span2Hats(i,1));
    theta2 = asin(span2Hats(i,3));
    
    phi2Proj  = [span2Hats(i,1),span2Hats(i,2),0];
    phi2Proj  = phi2Proj / norm(phi2Proj);
    phi2Hat   = [-sin(phi2),cos(phi2),0];
    theta2Hat = -phi2Proj*sin(theta2) + [0,0,1]*cos(theta2);
    
    eta2 = atan2( abs(dot(chord2Hats(i,:),theta2Hat)), abs(dot(chord2Hats(i,:),phi2Hat))); 
        
    adjust(i,17) = phi2   ; 
    adjust(i,18) = theta2 ; 
    adjust(i,19) = eta2   ; 
    
    % DO NOT ? subtract the original angles, such that we'll be able to apply all
    % corrections at once by the line: newStroke = stroke + adjust ;
    
    angind = [5 6 11 12 13 17 18 19] ;
    adjust(i,angind) = adjust(i,angind)*180/pi ; % - stroke(i,angind) ; %#ok<SAGROW>
    
    % UPDATE directly to "data"
    % -------------------------
    
    
    if (flags(i,7)>0)
        data.rhoTimes = sort(unique([data.rhoTimes i])) ;
    else
        % if current time was in the rhoTimes, delete it from there
        ass = find(data.rhoTimes == i) ;
        if (~isempty(ass))
            data.rhoTimes(ass) = [] ;
        end
        clear ass ; % need toilet paper?
        
        
    end
    
    % centers of mass
    data.bodyCM(i,:) = cb ;
    % vectors
    
    
    data.rightChordHats(i,:) = chord1Hats(i,:) ;
    data.leftChordHats(i,:)  = chord2Hats(i,:);
    data.rightSpanHats(i,:)  = span1Hats(i,:) ;
    data.leftSpanHats(i,:)   = span2Hats(i,:);
        
    data.rightWingCM(i,:) = cr ;
    data.leftWingCM(i,:)  = cl ;
    
    if swap(i) == 1
        
        temp1 = data.RESIDX(row1:row2,2) ;
        data.RESIDX(row1:row2,2) = data.RESIDX(row1:row2,3) ;
        data.RESIDX(row1:row2,3) = temp1 ;
        try
            temp2 = data.rightWingTips(i,:) ;
            data.rightWingTips(i,:) = data.leftWingTips(i,:) ;
            data.leftWingTips(i,:) = temp2 ;
        catch
            disp('No wingtip yet');
        end
    end
    data.AHat(i,:)           = rollHats(i,:) ;
    
    data.rollVectors(i,:)    = normRolls(i,:) / norm(normRolls(i,:)); % also renormalize
    
    if (mod(i,saveEvery)==0 && saveFlag)
        disp(['Saving data every ' num2str(saveEvery) ' frames...']) ;
        save(outputFilenameFull, 'data') ;
        disp('Done saving.') ;
    end
    
    checked = false ;
    
    if (~isempty(userinp) && lower(userinp(1))=='b')
        if (i>1)
            i=i-1 ;
            checked = true ;
        else
            disp('Cannot go back from frame 1.') ;
        end
    elseif (isempty(userinp))
        i=i+1 ;
        checked = true ;
    end
    
    if (~isempty(userinp) && lower(userinp(1))=='f')
        if (i<=Nimages-18)
            i=i+18 ;
            checked = true ;
            disp('going 15 frames forward.') ;
        else
            disp('Cannot go 15 frames forward from here.') ;
        end
    elseif (~checked)
        i=i+1 ;
        checked = true ;
    end
    
end

% save everything
if (saveFlag)
    %save(outputFilename, 'flags','adjust','swap','flip1','flip2','stroke', ...
    %    'chord1Hats_user', 'chord2Hats_user', 'span1Hats_user', ...
    %    'span2Hats_user', 'rollHats_user') ;
    disp('Saving data...') ;
    save(outputFilenameFull, 'data') ;
    disp('Done saving.'); 
end

